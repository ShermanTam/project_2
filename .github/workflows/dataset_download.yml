name: Python CI

on:
  workflow_dispatch:
    inputs:
      model_type:
        description: "Model type"
        required: true
        default: "LSTM"
        type: choice
        options:
          - LSTM
          - Attention

      epoch_number:
        description: "Epoch number"
        required: true
        default: "10"
        type: choice
        options:
          - 2
          - 5
          - 10
          - 50

      batch_size:
        description: "Batch Size"
        required: true
        default: "14"
        type: choice
        options:
          - 5
          - 10
          - 14
          - 20
          - 32
  # For automated triggers;
  # push:
  #   branches:
  #     - main
env:
  FLICKER_8K_TEXT: "1sIxT8WrW21vaQvUY3BLGnnmAY-ocZhpO"
  FLICKER_8K_IMAGE: "176wGCHHp2DpoDblsliEkX4fTpfQUbZOq"

jobs:
  build:
    runs-on: ubuntu-latest

    if: ${{ inputs.epoch_number }}
    steps:
      - name: "Executing for Epoch ${{ inputs.epoch_number }}"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pipenv"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel gdown

      - name: Install dependencies
        run: |
          pipenv install --deploy --dev --verbose

      - name: Download DS dataset
        run: |
          gdown "${{env.FLICKER_8K_TEXT}}" -O datasets/download_ds_file.zip

      - name: Download Image dataset
        run: |
          gdown "${{env.FLICKER_8K_IMAGE}}" -O datasets/download_image_file.zip

      - name: Check if file exists
        run: |
          chmod +x scripts/ 
          ./scripts/check_file_exists.sh datasets/*.zip

      - name: Run Python script
        env:
          MODEL_TYPE: ${{ inputs.model_type }}
          EPOCH_NUMBER: ${{ inputs.epoch_number }}
          BATCH_SIZE: ${{ inputs.batch_size }}
        run: pipenv run python ImageCaptionGenerator.py $MODEL_TYPE $EPOCH_NUMBER $BATCH_NUMBER
